spring:
  application:
    name: Feign_Consumer
#  cloud:
#    config:
#      uri: http://localhost:8301
#      label: master
#      profile: prod
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/strive
    username: root
    password: root
#   下面为连接池的补充设置，应用到上面所有数据源中
#   初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
#   配置获取连接等待超时的时间
    maxWait: 60000
#   配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
#    配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
#    打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
#    配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
#    通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#    合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
server:
  port: 8081

eureka:
  instance:
    hostname: Feign_Consumer
    prefer-ip-address: true
    instance-id: ${eureka.instance.hostname}:${server.port}
  client:
    service-url:
      defaultZone: http://hongcd:123456@eureka-server:6571/eureka/, http://hongcd:123456@eureka-server:6572/eureka/

provider:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

providerSecond:
  ribbon:
    NFLoadBalancerRuleClassName: com.netfilx.loadbalancer.RoundRobinRule

# 如果需要单独针对Service配置，在ribbon前面加上VIP，如：provider.ribbon.ConnectionTimeout=600
ribbon:
#  设置连接超时时间
  ConnectTimeout: 600
#  设置读取超时时间
  ReadTimeout: 6000
#  对所有操作请求都进行重试
  OkToRetryOnAllOperations: true
#  切换实例的重试次数
  MaxAutoRetriesNextServer: 2
#  对当前实例的重试次数
  MaxAutoRetries: 1

# 设置熔断超时时间
#hystrix:command.default.execution.isolation.thread.timeoutInMilliseconds=10000
# 关闭Hystrix功能（不要和上面的配置一起使用）
#feign.hystrix.enabled=false
# 关闭熔断功能
#hystrix.command.default.execution.timeout.enabled=false

# 配置请求GZIP压缩
#feign.compression.request.enabled=true
# 配置响应GZIP压缩
#feign.compression.response.enabled=true
# 配置压缩支持的MIME TYPE
#feign.compression.request.mime-types=text/xml,application/xml,application/json
# 配置压缩数据大小的下限
#feign.compression.request.min-request-size=2048